generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model client {
  id                         String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                    String                       @db.Uuid
  organization_id            String                       @db.Uuid
  created_at                 DateTime                     @default(now()) @db.Timestamp(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(6)
  organization               organization                 @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                       user                         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  testosterone_boosting_plan testosterone_boosting_plan[]
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  client      client[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model testosterone_boosting_plan {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  client_id    String   @db.Uuid
  plan_details String   @db.VarChar(255)
  progress     String?  @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  client       client   @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  client       client[]
  organization organization[]
}
